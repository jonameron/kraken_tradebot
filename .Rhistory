p
source("index.R")
p
model <- lm(FX ~ timestamp, data = trades)
model
linear_model <- lm(FX ~ timestamp, data = trades)
linear_model
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')%>%add_trace(y = ~linear_model, name = 'linearM',mode = 'lines')
p
predict(linear_model)
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')%>%add_trace(y = predict(linear_model), name = 'linearM',mode = 'lines')
p
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')%>%add_trace(y = ~predict(linear_model), name = 'linearM',mode = 'lines')
p
trades[["linearM"]] <- predict(linear_model)
trades
trades[["linearM"]] <- predict(linear_model)
class(trades$linearM) <- "numeric"
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')%>%add_trace(y = ~linear_model, name = 'linearM',mode = 'lines')
p
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')%>%add_trace(y = ~linear_model, name = 'linearM',mode = 'lines')
p
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')%>%add_trace(y = ~linearM, name = 'linearM',mode = 'lines')
p
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')%>%add_trace(y = trades$linearM, name = 'linearM',mode = 'lines')
p
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')%>%add_trace(y = trades$linearM, name = 'linearM',mode = 'scatter')
p
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')%>%add_trace(y = ~trades$linearM, name = 'linearM',mode = 'scatter')
p
p <- plot_ly( x = trades$timestamp, y = trades$FX, name = 'FX', type = 'scatter', mode = 'lines')
p
p <- add_trace(p,y = ~trades$linearM, name = 'linearM',mode = 'scatter')
p
trades$linearM
p <- add_trace(p,y = ~trades$linearM, name = 'linearM',mode = 'lines')
p
p <- add_trace(p,y = ~trades$linearM, name = 'linearM',mode = 'lines')
p <- plotly()
p <- add_trace(p,y = ~trades$linearM, name = 'linearM',mode = 'lines')
p
p1 <- plotly()
p1 <- add_trace(p,y = ~trades$linearM, name = 'linearM',mode = 'lines')
p1
p1
p2
rm(list=ls())
p <- plotly()
p
p1 <- add_trace(p,y = ~trades$linearM, name = 'linearM',mode = 'lines')
p <- add_trace(p,y = ~trades$linearM, name = 'linearM',mode = 'lines')
p
source(index.R)
source("index.R")
p <- add_trace(p,y = ~trades$linearM, name = 'linearM',mode = 'lines')
p
rm(list=ls())
source("index.R")
p <- plotly()
p
p <- add_trace(p,y = ~trades$linearM, name = 'linearM',mode = 'lines')
p
predict(linear_model)
trades$FX-predict(linear_model)
trades[5]<- predict(linear_model)
trades
trades[6]<- predict(linear_model)
source("index.R")
trades
source("index.R")
p
p <- add_trace(p,y=trades$lm)
p
class(trades$lm)
class(trades$FX)
p <- add_trace(p,y=trades$lm,evaluation = FALSE)
p
source("index.R")
p
p <- add_trace(p,y=trades$lm,evaluation = FALSE)
p
p <- add_trace(p,y2=trades$lm,evaluation = FALSE)
p
source("index.R")
p <- add_trace(p,y2=trades$lm,evaluation = FALSE)
p
p <- add_trace(p,y2=trades$lm,evaluation = FALSE)
p <- add_trace(p,y2=trades$lm,evaluation = FALSE)
p
p <- add_trace(p,y=trades$lm,evaluation = FALSE)
p
source("index.R")
p <- add_trace(p,x=trades$timestamp,y=trades$lm,evaluation = FALSE)
p
source("index.R")
p
source("index.R")
p
source("index.R")
p
linear_model
summary(linear_model)
linear_model$coefficients
linear_model$coefficients[2]
linear_model$coefficients[2]*period()+linear_model$coefficients[2]
linear_model$coefficients[2]*period()+linear_model$coefficients[1]
linear_model$coefficients[2]*last_timestamp+linear_model$coefficients[1]
source("index.R")
p
source("index.R")
p
source("index.R")
p
source("index.R")
p
source("index.R")
p
source("index.R")
p
source("index.R")
p
source("index.R")
p
raken_PublicFn("Trades?pair=XETHZEUR")
kraken_PublicFn("Trades?pair=XETHZEUR")
kraken_PublicFn("Trades?pair=XETHZEUR",since=1494090977811771009)
kraken_PublicFn("Trades?pair=XETHZEUR?since=1494090977811771009")
kraken_PublicFn("Trades?pair=XETHZEUR?since=1494090977811771000")
kraken_PublicFn("Trades?pair=XETHZEUR?since=1494090977811171000")
kraken_PublicFn("Trades?pair=XETHZEUR&since=1494090977811171000")
source("index.R")
p
source("index.R")
p
Sys.time()
as.POSIXct(Sys.time())
as.interger(Sys.time())
as.interger(as.POSIXct(Sys.time()))
as.numeric(as.POSIXct(Sys.time()))
as.numeric(Sys.time())
source("index.R")
p
source("index.R")
p
source("index.R")
p
source("index.R")
p
kraken_PublicFn("Trades?pair=XETHZEUR")$XETHZEUR)
kraken_PublicFn("Trades?pair=XETHZEUR")$XETHZEUR
kraken_PublicFn("Trades?pair=XETHZEUR&since=1494091793")$XETHZEUR
source("index.R")
trades
source("index.R")
p
trades$FX
trades$timestamp
as.numeric(Sys.time())
as.POSIXt(as.numeric(Sys.time()))
as.POSIXct(as.numeric(Sys.time()))
as.POSIXlt(as.numeric(Sys.time()))
as.POSIXlt(origin=as.numeric(Sys.time()))
as.POSIXlt(origin=as.numeric(Sys.time()),tz="UTC")
as.POSIXlt(as.numeric(Sys.time()),origin = "1960-01-01")
as.POSIXlt(as.numeric(Sys.time()),origin = "1960-01-01")
as.POSIXlt(as.numeric(Sys.time()),origin = "1960-01-01")
as.POSIXlt(as.numeric(Sys.time()),origin = "1970-01-01")
as.POSIXlt(trades$timestamp[1000],origin = "1970-01-01")
as.POSIXlt(trades$timestamp[0],origin = "1970-01-01")
as.POSIXlt(trades$timestamp[1],origin = "1970-01-01")
source("index.R")
trades$FX
p
source("index.R")
source("index.R")
kraken_PublicFn("Trades?pair=XETHZEUR&since=0")$last)
kraken_PublicFn("Trades?pair=XETHZEUR&since=0")$last
kraken_PublicFn("Trades?pair=XETHZEUR&since=0")$last
kraken_PublicFn("Trades?pair=XETHZEUR)$last
kraken_PublicFn("Trades?pair=XETHZEUR")$last
kraken_PublicFn("Trades?pair=XETHZEUR")$last
kraken_PublicFn("Trades?pair=XETHZEUR")$last
kraken_PublicFn("Trades?pair=XETHZEUR")$last
source("index.R")
source("index.R")
p
source("index.R")
p
source("index.R")
p
trades
source("index.R")
trades
source("index.R")
tradeSet
tradeSet$last
write.csv2(x = tradeSet)
write.csv2(x = tradeSet,file="../R_TradeBot_Kraken/Data/history.csv")
write.csv2(x = tradeSet,file="../R_TradeBot_Kraken/Data/history.csv")
trades
trades["last"]<- prev_timestamp
trades
write.csv2(x = tradeSet,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r",col.names = TRUE)
write.csv2(x = tradeSet,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r",col.names = TRUE)
write.csv(x = tradeSet,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r",col.names = TRUE)
write.csv(x = tradeSet,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
write.table(x = tradeSet,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
write.csv(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
trades
class(trades)
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
source("index.R")
trades
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
source("index.R")
trades
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
source("index.R")
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,eol = "\r")
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE)
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,col.names = FALSE)
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,col.names = FALSE)
write.table(x = trades,file="../R_TradeBot_Kraken/Data/history.csv",append = TRUE,col.names = FALSE)
trades
prev_timestamp
tradeSet
as.data.frame(tradeSet)
as.data.frame(do.call(rbind,tradeSet$XETHZEUR)
)
trades <- as.data.frame(do.call(rbind,tradeSet$XETHZEUR))
trades["last"]<- prev_timestamp
trades
source("index.R")
trades
trades$last
trades$NnA
source("index.R")
source("index.R")
trades
select(trades,-"NnA")
subset(trades,select=-"NnA")
subset(trades,select=-c("NnA")
)
trades
subset(trades,select=-6)
source("index.R")
trades
prev_timestamp
p
write.table(x = trades,file="../R_TradeBot_Kraken/Data/trades_history.csv",append = TRUE)
write.table(x = trades,file="../R_TradeBot_Kraken/Data/trades_history.csv",append = TRUE)
trades
write.table(x = trades,file="../R_TradeBot_Kraken/Data/trades_history.csv",append = TRUE)
write.table(x = trades,file="../R_TradeBot_Kraken/Data/trades_history.csv",append = TRUE,col.names = FALSE)
source("index.R")
source("index.R")
trades
prev_timestamp-trades$timestamp[1000]
as.numeric(prev_timestamp)-as.numeric(trades$timestamp[1000])
as.numeric(prev_timestamp)
x <-as.numeric(prev_timestamp)
y <- as.numeric(trades$timestamp[length(trades$timestamp)])
y
x-y
as.POSIXct.date(x)
as.POSIXlt(as.numeric(x),origin = "1970-01-01")
as.POSIXlt(as.numeric(y),origin = "1970-01-01")
tradeSet$last
y <- tradeSet$last
as.POSIXlt(as.numeric(y),origin = "1970-01-01")
as.POSIXlt(as.numeric(x),origin = "1970-01-01")
as.POSIXlt(as.numeric(y),origin = "1970-01-01")
as.POSIXlt(as.numeric(x),origin = "1970-01-01")
as.POSIXlt(as.numeric(y),origin = "1970-01-01")
x
as.POSIXlt(y,origin = "1970-01-01")
as.POSIXlt(x,origin = "1970-01-01")
y <- as.numeric(trades$timestamp[length(trades$timestamp)])
as.POSIXlt(y,origin = "1970-01-01")
as.POSIXlt(tradeSet$last)
as.POSIXlt(as.numeric(tradeSet$last))
as.POSIXlt(as.numeric(tradeSet$last),origin = "1970-01-01"))
as.POSIXlt(as.numeric(tradeSet$last),origin = "1970-01-01")
source("index.R")
source("index.R")
source("index.R")
prev_timestamp
source("index.R")
read.csv(file = "../R_TradeBot_Kraken/Data/download_times.csv")
source("index.R")
read.csv(file = "../R_TradeBot_Kraken/Data/download_times.csv")
r <- read.csv(file = "../R_TradeBot_Kraken/Data/download_times.csv")
r
r$X
as.data.frame(r)
do.call(rbind,r)
do.call(rbind,as.data.frame(r))
do.call(rbind,as.data.frame(r$X))
r$X
as.data.frame(do.call(rbind,r$X))
as.data.frame(do.call(rbind,r$X))
typeof(r$X)
typeof(r$X)
r$X
r$X[1]
as.numeric(r$X)
as.numeric(r$X[1])
as.numeric(r$X[2])
as.numeric(r$X[[1]])
source("index.R")
r <- read.csv(file = "../R_TradeBot_Kraken/Data/download_times.csv")
r
r$X
as.data.table(r$X)
as.data.table(r$X)[3]
as.numeric(as.data.table(r$X)[3])
as.data.table(r$X)[3]
as.data.table(r$X)[3]$V1
as.numeric(as.data.table(r$X)[3]$V1)
as.list(r$X)
as.list(r$X)[1]
as.list(r$X)[[1]]
as.numeric(as.list(r$X)[[1]])
as.numeric(as.list(r$X)[[2]])
as.numeric(as.list(r$x)[[2]])
as.numeric(as.list(r$x)[[1]])
as.numeric(as.list(r$x))
r$x
r$X
as.list(r$X)
as.list(levels(r$X))
as.list(levels(r$X))[1]
as.list(levels(r$X))[1,]
as.list(levels(r$X))[1]
as.numeric(as.list(levels(r$X))[1])
as.list(levels(r$X))[1]
as.list(levels(r$X))[2]
as.list(levels(r$X))[2][[1]][1]
as.numeric(as.list(levels(r$X))[2][[1]][1])
as.list(levels(r$X))[2][[1]][1]
as.list(levels(r$X))[3][[1]][1]
levels(r$X)
levels(r$X)
as.numeric(levels(r$X))
levels(r$X)
as.numeric(levels(r$X))[r$X]
as.numeric(levels(r$X))[1]
as.numeric(levels(r$X))
typeof(r$X)
r$X*2
as.numeric(levels(r))
as.numeric(levels(r$X))
as.character(levels(r$X))
as.numeric(as.character(levels(r$X)))
as.character(levels(r$X))
source("index.R")
source("index.R")
source("index.R")
source("index.R")
prev_timestamp
source("index.R")
write.table(prev_timestamp,file = "../R_TradeBot_Kraken/Data/download_times.csv",append = TRUE,col.names = FALSE)
source("index.R")
r
r$X1.1494098464.0259
r
as.character(r)
source("index.R")
r
r
source("index.R")
source("index.R")
r
r$last
tail(r$last)
tail(r$last,n = 1)
as.integer(tail(r$last,n = 1))
as.integer(tail(r$last,n = 1))*2
as.integer(tail(r$last,n = 1))
source("index.R")
as.integer(tail(r$last,n = 1))
r
last_timestamp
last_timestamp <- as.numeric(trades$timestamp[length(trades$timestamp)])
last_timestamp
trades <- as.data.frame(do.call(rbind,tradeSet$XETHZEUR))
trades
trades <- as.data.frame(do.call(rbind,tradeSet$XETHZEUR))
last_timestamp
as.POSIXlt(last_timestamp,origin = "1970-01-01")
source("index.R")
p
source("index.R")
p
first_timestamp
as.decimal(first_timestamp)
as.numeric(first_timestamp)
source("index.R")
first_timestamp
first_timestamp
source("index.R")
first_timestamp
last_timestamp <- as.character(trades$timestamp[length(trades$timestamp)])
last_timestamp
as.character.numeric_version(last_timestamp)
as.numeric(last_timestamp)
1494099944.5898
x<-14940999445898
as.POSIXct(x)
as.POSIXct(x,origin="1970-01-01")
as.POSIXct(1494099944.5898,origin="1970-01-01")
source("index.R")
source("index.R")
snce
r
r$last
source("index.R")
snce
source("index.R")
p
p
snce
source("index.R")
source("index.R")
p
source("index.R")
p
source("index.R")
source("index.R")
source("index.R")
source("index.R")
source("index.R")
snce
r$last
r$id
source("index.R")
snce
source("index.R")
.libPaths()
.libPaths("~/.R_packages/")
source("index.R")
library("data.table")
source("index.R")
p
source("index.R")
source("index.R")
p
p
source("index.R")
p
trades
t <- tail(trades,n = 200)
lm(t$timestamp,t$FX)
lm(formula = t$FX ~t$timestamp )
predict(lm)
tailmodel <- lm(formula = t$FX ~t$timestamp )
predict(tailmodel)
tailmodel <- lm(formula = t$FX ~t$timestamp )
tailmodel
tailFractions <- 1:5/5
tailFractions
tail(x=trades, n= tailFractions*length(trades))
tailFractions*length(trades)
trades
length(trades)
tail(x=trades, n= tailFractions*length(trades$FX))
tailFractions*length(trades$FX)
tail(x=trades, n= tailFractions*length(trades$FX))
tailFractions
tailFractions <- 1:4/5
tail(x=trades, n= tailFractions*length(trades$FX))
tail(x=trades, n= 200
)
tail(x=trades, n= 200)
tail(trades)
tail(trades,200)
tail(x=trades, n= tailFractions*length(trades$FX))
tail(x=trades, n= tailFractions*length(trades$FX))
as.integer(8.4)
tail(x=trades, n= tailFractions*length(trades$FX))
quantile <- 3
tailNo <- as.numeric(length(trades$FX)/quantile)
tailNo
tailNo <- as.integer(length(trades$FX)/quantile)
tailNo
tail <- tail(x=trades,n=tailNo
)
tail
model <- lm(tail$FX ~ tail$timestamp)
model
model$coefficients
model$coefficients[2]
typeof(model$coefficients[2])
source("index.R")
tailslope(5)
tailslope(2)
tailslope(3)
tailslope(4)
tailslope(5)
tailslope(10)
tailslope(100)
tailslope(10)
tailslope(50)
tailslope(20)
tailslope(10)
source("index.R")
p
source("index.R")
source("index.R")
